lcl <- "center - 3 * center * sqrt(1 - c4^2)/c4"
ucl <- "center + 3 * center * sqrt(1 - c4^2)/c4"
stat_fun <- sd
class <- "s"
n_min <- 8
n_max <- 25
#check that n > nmin & n <= n_max
test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())
if(any(test_n$n < n_min)) stop(paste("Error, group size cannot be smaller that", n_min))
if(any(test_n$n > n_max)) stop(paste("Error, group size cannot be larger that", n_max))
###################################
#### No extra changes from here ###
###################################
## add stat, shape and n()
stat_dots   <- setNames(
list(interp( ~n()),
interp( ~stat_fun(x), x = as.name(x)),
interp( ~constant(n, c4))),
c("n", "stat", "c4")
)
stat_data <- data %>%
group_by_(g) %>%
summarise_(.dots = stat_dots)
## compute center , lcl and ucl
stat_data <- stat_data %>% mutate_( center = ~mean(stat),
lcl = lcl,
ucl = ucl)
##Filter
stat_data <- stat_data %>% select_( group = g, "n",  "stat", "center", "lcl", "ucl")
attr(stat_data, "class") <- c(class , "spc" , "tbl_df", "tbl", "data.frame")
#return
return(stat_data)
}
sv <- wes_(production, x = dim_mm, g = batch)
library(dplyr)
sv <- wes_(production, x = dim_mm, g = batch)
sv <- wes_(production, x = "dim_mm", g = "batch")
library(chartconstants)
sv <- wes_(production, x = "dim_mm", g = "batch")
sv_new <- s(production, x = dim_mm, g = batch)
sv == sv_new
rm(d,rr,rr_new,sv,sv_new)
rm(xbr,xbr_new)
rm(xbrs,xbrs_new)
rm(a)
rm(wes)
rm(wes_)
rm(uu,uu_new)
m <- mean(na.rm=T)
interp(~2)
cc <- c_chart(test_c,defect)
cc <- c_chart(test_c,defect)
library(qAnalyst)
cc_new <- c_chart(test_c,defect)
cc == cc_new
head(cc)
head(cc_new)
library(qAnalyst)
cc_new <- c_chart(test_c,defect)
cc == cc_new
head(cc)
head(cc_new)
interp(~center_fun(stat, NA.rm=TRUE)
)
mrr <- mr_chart(test_i_mr,cost,2)
library(qAnalyst)
mrr_new <- mr_chart(test_i_mr,cost,2)
mrr == mrr_new
ii <- i_chart(test_i_mr,cost,2)
library(qAnalyst)
ii_new <- i_chart(test_i_mr,cost,2)
ii == ii_new
library(qAnalyst)
uu_new <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
library(qAnalyst)
uu_new <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
u_provola <- function(data, x, g){
ucl <- "center + 3 * sqrt(center / n)"
lcl <- "center - 3 * sqrt(center / n)"
center_fun <- function(x, g){sum(x) / sum(g)}
stat_fun <- function(x, g){x / g}
class <- "u_chart"
###################################
#### No extra changes from here ###
###################################
## add "group", "n", "stat", "center"
center_dots <- setNames(
list(
group = interp( ~row_number() ),
n = g,
interp( ~stat_fun(x, y), x = as.name(x), y = as.name(g) ),
interp( ~center_fun(x, y), x = as.name(x), y = as.name(g)) ),
c("group", "n", "stat", "center")
)
stat_data <- data %>% mutate_(.dots = center_dots)
# Add lcl and ucl
stat_data <- stat_data %>% mutate_(lcl = lcl, ucl = ucl)
# Filter
stat_data <- stat_data %>% select_("group","n","stat","center","lcl","ucl")
# Set class
attr(stat_data, "class") <- c(class , "spc" , "tbl_df", "tbl", "data.frame")
# set attributes
attr(stat_data, "x_lab") <- x
#return
return(stat_data)
}
uu <- u_provola(test_u, "total_number_nonconformities", "number_of_inspection_units")
uu == uu_new
head(uu)
head(uu_new)
library(qAnalyst)
uu_new <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
library(qAnalyst)
uu_new <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
library(qAnalyst)
uu_new <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
uu == uu_new
plot(uu)
plot(uu_new)
rm(cc,cc_new)
rm(ii,ii_new)
rm(mrr,mrr_new,uu,uu_new)
rm(u_provola)
rm(ingots)
rm(test_c,test_u)
data("test_p")
data("test_np")
uu <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
library(qAnalyst)
uu_new <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
library(qAnalyst)
uu_new <- u_chart(test_u, total_number_nonconformities, number_of_inspection_units)
uu == uu_new
rm(uu,uu_new)
pp <- p_chart(test_p,defect,sample_size)
library(qAnalyst)
pp_new <- p_chart(test_p,defect,sample_size)
pp == pp_new
library(qAnalyst)
pp_new <- p_chart(test_p,defect,sample_size)
pp == pp_new
library(qAnalyst)
pp_new <- p_chart(test_p,defect,sample_size)
pp == pp_new
plot(pp == pp_new)
plot(pp == pp_new)
npp <- np_chart(test_np,non_conforming_cans,sample_size)
library(qAnalyst)
npp_new <- np_chart(test_np,non_conforming_cans,sample_size)
head(npp_new)
npp_new
npp_new
View(npp_new)
npp == npp_new
npp_new <- np_chart(test_np,non_conforming_cans,sample_size)
plot(npp)
plot(npp_new)
library(qAnalyst)
library(qAnalyst)
npp_new <- np_chart(test_np,non_conforming_cans,sample_size)
npp == npp_new
library(qAnalyst)
npp_new <- np_chart(test_np,non_conforming_cans,sample_size)
head(npp_new)
head(npp)
plot(npp)
plot(npp_new)
npp == npp_new
library(qAnalyst)
npp_new <- np_chart(test_np,non_conforming_cans,sample_size)
npp_new == npp
library(qAnalyst)
?ifelse
ifelse(is.null(NULL),"A2","A")
library(qAnalyst)
data("ingots")
data("test_i_mr")
xbr <- xbar_r(ingots,kg,group)
mrc <- mr_chart(test_i_mr,cost,2)
library(qAnalyst)
library(qAnalyst)
xbr_new <- xbar_r(ingots,kg,group)
library(qAnalyst)
xbr_new <- xbar_r(ingots,kg,group)
xbr == xbr_new
mrc_new <- mr_chart(test_i_mr,cost,2)
mrc == mrc_new
plot(mrc)
stat_fun <- function(...) {mean(...)}
stat_fun(1:10,222)
stat_fun(1:10,222,333)
stat_fun(1:10,222:100,333)
stat_fun(1:10,222:300,333)
diff_range <- function(x, ...) {diff(range(x, ...))}
diff_range(1:10)
diff_range(1:10)
diff_range(1:10,1:222)
stat_fun <- function(x, ...) {mean(x)}
stat_fun(1:10,222:2499,124,"a")
stat_fun(1:10,222:2499,124,"a",400:1)
rm(list=ls())
data(ingots)
library(qAnalyst)
data(ingots)
xbr <- xbar_r(ingots,kg,group)
head(xbr)
library(qAnalyst)
xbr_new <- xbar_r(ingots,kg,group)
library(qAnalyst)
xbr_new <- xbar_r(ingots,kg,group)
xbr == xbr_new
xbr_new <- xbar_r(ingots,kg,group,mu=1)
head(xbr_new)
xbr == xbr_new
head(xbr_new)
xbr_new <- xbar_r(ingots,kg,group,mu=1,sigma=1)
head(xbr_new)
xbr == xbr_new
head(xbar_r(ingots,kg,group,mu=1,sigma=0.1))
plot(xbar_r(ingots,kg,group,mu=1,sigma=0.1))
plot(xbar_r(ingots,kg,group,mu=1,sigma=0.01))
xbrs <- xbar_s(production,dim_mm,batch)
head(xbrs)
library(qAnalyst)
xbrs_new <- xbar_s(production,dim_mm,batch)
xbrs == xbrs_new
library(qAnalyst)
xbrs_new <- xbar_s(production,dim_mm,batch)
xbrs == xbrs_new
head(xbrs)
xbrs_new <- xbar_s(production,dim_mm,batch,mu=10)
head(xbrs)
head(xbrs_new)
xbrs == xbrs_new
xbrs_new <- xbar_s(production,dim_mm,batch,mu=10,sigma=0.05)
xbrs == xbrs_new
head(xbrs_new)
xbrs_new <- xbar_s(production,dim_mm,batch,mu=10,sigma=1)
head(xbrs_new)
3/sqrt(10)
3/sqrt(4)
3/sqrt(10)
10-3/sqrt(10)
library(qAnalyst)
xbrs_new <- xbar_s(production,dim_mm,batch,mu=10,sigma=1)
head(xbrs_new)
10-3/sqrt(10)
plot(xbrs_new)
plot(xbrs)
rm(list=ls())
data("ingots")
rr <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
debugonce(rr_new <- r(ingots, kg, group))
q
a
rr_new <- r(ingots, kg, group)
xbrs <- xbar_s(production,dim_mm,batch)
xbrs <- xbar_s(production,dim_mm,batch,10,1)
library(qAnalyst)
xbrs <- xbar_s(production,dim_mm,batch,10,1)
head(xbrs)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
identity(1:10)
identity(1)
identity(1,1)
identity(1,107)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rm(xbrs)
data <- ingots
x <- "kg"
g = "group"
# lcl ucl formulas and constants name
lcl <- "lcl_const * center"
ucl <- "ucl_const * center"
lcl_c <- ifelse(is.null(sigma), "D3", "D1")
sigma = NULL
# lcl ucl formulas and constants name
lcl <- "lcl_const * center"
ucl <- "ucl_const * center"
lcl_c <- ifelse(is.null(sigma), "D3", "D1")
ucl_c <- ifelse(is.null(sigma), "D4", "D2")
# functions: stat, shape, center, avg_shape
stat_fun <- function(x, ...){diff_range(x)}
shape_fun <- function(x, ...){identity(x)}
center_fun <- function(x, ...){mean(x)}
avg_shape_fun <- function(x, ...){mean(x)}
#----------------------------------------
# Check if standards (mu and sigma) are given
set_function <- function(fun, k=NULL, const = "one", n = 2){
if(is.null(k)){
stat_fun <- fun
} else {
stat_fun <- function(x, ...) {k}
}
stat_fun
}
center_fun <- set_function(fun = center_fun, k = sigma)
#shape_fun <- set_function(fun = shape_fun, k = sigma)
# Class
class <- "r"
n_min <- 2
n_max <- 10
#check that n > nmin & n <= n_max
test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())
library(dplyr)
library(chartconstants)
test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())
if(any(test_n$n < n_min)) stop(paste("Error, group size cannot be smaller that", n_min))
if(any(test_n$n > n_max)) stop(paste("Error, group size cannot be larger that", n_max))
###################################
#### No extra changes from here ###
###################################
n <- interp(~n())
stat_formula <- interp( ~stat_fun(x, y), .values = list(x = as.name(x), y = as.name(g)) )
shape_formula <- interp( ~shape_fun(x, y), .values = list(x = as.name(x), y = as.name(g)) )
library(lazyeval)
n <- interp(~n())
stat_formula <- interp( ~stat_fun(x, y), .values = list(x = as.name(x), y = as.name(g)) )
shape_formula <- interp( ~shape_fun(x, y), .values = list(x = as.name(x), y = as.name(g)) )
lcl_const_formula <- interp( ~constant(n, lcl_c))
ucl_const_formula <- interp( ~constant(n, ucl_c))
center_formula <- interp( ~center_fun(stat))
avg_shape_formula <- interp( ~avg_shape_fun(shape))
## ## add n(), stat(), shape()
stat_dots   <- setNames(
list(n,
stat_formula,
shape_formula,
lcl_const_formula,
ucl_const_formula ),
c("n", "stat", "shape", "lcl_const", "ucl_const")
)
stat_data <- data %>%
group_by_(g) %>%
summarise_(.dots = stat_dots)
stat_dots
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rr == rr_new
?ifelse
plot(rr)
plot(rr_new)
rr_new
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rr == rr_new
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rr == rr_new
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rr == rr_new
plot(rr_new)
plot(rr)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rr_new <- r(ingots, kg, group)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rr == rr_new
any((rr == rr_new) == 0)
any((rr == rr_new) == 1)
any((rr == rr_new) == F)
any((rr == rr_new) == F)
head(r(ingots, kg, group, sigma = 10))
head(r(ingots, kg, group))
head(r(ingots, kg, group, sigma=0.1))
head(r(ingots, kg, group, sigma=0.01))
constant(d2,2)
constant(2,d2)
constant("d2",d2)
constant(2,d2)
library(qAnalyst)
head(r(ingots, kg, group, sigma=0.01))
head(r(ingots, kg, group))
head(r(ingots, kg, group, sigma=0.05))
interp(mean(1:10)*mean(1:10))
interp(mean(x)*mean(x))
interp(mean(x)*mean(x),x= as.name("x"))
rr_new <- r(ingots, kg, group)
sc <- s(production, x = dim_mm, g = batch)
rm(data,test_n,class,avg_shape_formula,avg_shape_formula)
library(qAnalyst)
rr_new <- r(ingots, kg, group)
rr = rr_new
rr_new <- r(ingots, kg, group)
plot(rr_new)
rm(rr,rr_new)
sc_new <- s(production, x = dim_mm, g = batch)
warnings()
library(qAnalyst)
sc_new <- s(production, x = dim_mm, g = batch)
sc == sc_new
any((sc == sc_new) == F)
sc_new <- s(production, x = dim_mm, g = batch,sigma=10)
head(sc_new)
library(qAnalyst)
sc_new <- s(production, x = dim_mm, g = batch,sigma=10)
library(chartconstants)
constant(2,"B6")
constant(2,"B4")
constant(2,"B5")
constant(2,"B3")
constant(2,"B4")
constant(2,"B5")
constant(2,"B6")
library(qAnalyst)
sc_new <- s(production, x = dim_mm, g = batch,sigma=10)
sc_new <- s(production, x = dim_mm, g = batch)
sc == sc_new
sc_new <- s(production, x = dim_mm, g = batch)
sc_new <- s(production, x = dim_mm, g = batch,sigma=19)
library(qAnalyst)
sc_new <- s(production, x = dim_mm, g = batch,sigma=19)
library(qAnalyst)
sc_new <- s(production, x = dim_mm, g = batch,sigma=19)
sc_new <- s(production, x = dim_mm, g = batch)
constant(2,B5)
constant(2,"B5")
constant(2,"B6")
constant(2,B5)
constant(2,B6)
sc_new <- s(production, x = dim_mm, g = batch,sigma=19)
q
a
print(lcl_c)
print(ucl_c)
# functions: stat, shape, center, avg_shape
stat_fun <- function(x, ...){ sd(x) }
shape_fun <- function(x, ...){ 0 } # altra shape fun inutile. Messa solo per avere shape sotto
sc_new <- s(production, x = dim_mm, g = batch,sigma=19)
library(qAnalyst)
sc_new <- s(production, x = dim_mm, g = batch,sigma=19)
sc_new
sc_new <- s(production, x = dim_mm, g = batch)
sc_new <- s(production, x = dim_mm, g = batch,sigma=19)
sc_new <- s(production, x = dim_mm, g = batch)
sc == sc_new
head(sc)
sc_new <- s(production, x = dim_mm, g = batch,sigma=2)
head(sc_new)
rm(list=ls())
as.name(2)
pr <- function(x, y=2,...){print(paste(x,y))}
pr(2,4)
pr(2)
pr(2,pr)
pr(2,"pr")
data("test_i_mr")
mr <- mr_chart(test_i_mr,cost,2)
library(qAnalyst)
mr_new <- mr_chart(test_i_mr,cost,2)
library(qAnalyst)
mr_new <- mr_chart(test_i_mr,cost,2)
mr == mr_new
head(mr)
ic <- i_chart(test_i_mr,cost,2)
library(qAnalyst)
ic_new <- i_chart(test_i_mr,cost,2)
ic == ic_new
?c
cc <- c_chart(test_c,defect)
library(qAnalyst)
cc_new <- c_chart(test_c,defect)
as.name(NULL)
as.name(NA)
is.null(NA)
is.null(NULL)
library(qAnalyst)
cc_new <- c_chart(test_c,defect)
library(qAnalyst)
cc_new <- c_chart(test_c,defect)
cc == cc_new
library(qAnalyst)
cc_new <- c_chart(test_c,defect)
library(qAnalyst)
cc_new <- c_chart(test_c,defect)
library(qAnalyst)
