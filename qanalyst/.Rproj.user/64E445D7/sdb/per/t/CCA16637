{
    "contents" : "#######################################################\n#' xbar_r_\n#' SE version of xbar-R\n#' @param data\n#' @param x\n#' @param g\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @return An object of class xbar\n#' @export\nxbar_r_ <- function(data, x , g){\n  lcl <- \"center-A2*avg_shape\"\n  ucl <- \"center+A2*avg_shape\"\n  stat_fun <- mean\n  shape_fun <- diff_range\n  class <- \"xbar-r\"\n  n_min <- 2\n  n_max <- 10\n\n  #check that n > nmin & n <= n_max\n  test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n  if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n  if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n  ###################################\n  #### No extra changes from here ###\n  ###################################\n\n  ## add stat, shape and n()\n  stat_dots   <- setNames(\n    list(interp(~n()),\n         interp( ~stat_fun(x), x = as.name(x)),\n         interp( ~shape_fun(x), x = as.name(x))),\n    c(\"n\", \"stat\" , \"shape\")\n  )\n\n  stat_data <- data %>%\n              group_by_(g) %>%\n              summarise_(.dots = stat_dots)\n\n  ## merge with ccc\n  stat_data <- left_join(stat_data, ccc, by = \"n\")\n\n  ## compute center , lcl and ucl\n  stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                      avg_shape = ~mean(shape),\n                                      lcl = lcl,\n                                      ucl = ucl)\n\n  ##column Filter\n  stat_data <- stat_data %>% select_( group = g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n\n  #Class attributes\n  attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n  #return\n  return(stat_data)\n}\n#######################################################\n#######################################################\n#' SE version of xbar-S\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @return An object of class xbar-s\n#' @export\nxbar_s_ <- function(data, x , g){\n\n  lcl <- \"center-A3*avg_shape\"\n  ucl <- \"center+A3*avg_shape\"\n  stat_fun <- mean\n  shape_fun <- sd\n  class <- \"xbar-s\"\n  n_max <- 25\n  n_min <- 8\n\n  #check that n > nmin & n <= n_max\n  test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n  if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n  if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n  ###################################\n  #### No extra changes from here ###\n  ###################################\n\n  ## add stat, shape and n()\n  stat_dots   <- setNames(\n    list(interp(~n()),\n         interp( ~stat_fun(x), x = as.name(x)),\n         interp( ~shape_fun(x), x = as.name(x))),\n    c(\"n\", \"stat\" , \"shape\")\n  )\n\n  stat_data <- data %>%\n    group_by_(g) %>%\n    summarise_(.dots = stat_dots)\n\n  ## merge with ccc\n  stat_data <- left_join(stat_data, ccc, by = \"n\")\n\n  ## compute center , lcl and ucl\n  stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                      avg_shape = ~mean(shape),\n                                      lcl = lcl,\n                                      ucl = ucl)\n\n  ##xbar Filter\n  stat_data <- stat_data %>% select_( g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n\n  ## Set class\n  #attr(stat_data, \"names\") <- c(g , \"n\", \"stat\", sep = \"\"), \"center\" , \"lcl\", \"ucl\")\n\n  attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n  #return\n  return(stat_data)\n}\n#######################################################\n#' SE version of r\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @return An object of class r\n#' @export\nr_ <- function(data, x , g){\n\n  lcl <- \"D3*center\"\n  ucl <- \"D4*center\"\n  stat_fun <- diff_range\n  class <- \"r\"\n  n_min <- 2\n  n_max <- 10\n\n  #check that n > nmin & n <= n_max\n  test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n  if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n  if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n  ###################################\n  #### No extra changes from here ###\n  ###################################\n\n  ## add stat, shape and n()\n  stat_dots   <- setNames(\n    list(interp(~n()),\n         interp( ~stat_fun(x), x = as.name(x))),\n    c(\"n\", \"stat\")\n  )\n\n  stat_data <- data %>%\n    group_by_(g) %>%\n    summarise_(.dots = stat_dots)\n\n  ## merge with ccc\n  stat_data <- left_join(stat_data, ccc, by = \"n\")\n\n  ## compute center , lcl and ucl\n  stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                      lcl = lcl,\n                                      ucl = ucl)\n\n  ##Filter\n  stat_data <- stat_data %>% select_( g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n\n  attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n  #return\n  return(stat_data)\n}\n\n#######################################################\n#' SE version of s\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @return An object of class r\n#' @export\ns_ <- function(data, x , g){\n\n  lcl <- \"B3*center\"\n  ucl <- \"B4*center\"\n  stat_fun <- sd\n  class <- \"s\"\n  n_min <- 8\n  n_max <- 25\n\n  #check that n > nmin & n <= n_max\n  test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n  if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n  if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n  ###################################\n  #### No extra changes from here ###\n  ###################################\n\n  ## add stat, shape and n()\n  stat_dots   <- setNames(\n    list(interp(~n()),\n         interp( ~stat_fun(x), x = as.name(x))),\n    c(\"n\", \"stat\")\n  )\n\n  stat_data <- data %>%\n    group_by_(g) %>%\n    summarise_(.dots = stat_dots)\n\n  ## merge with ccc\n  stat_data <- left_join(stat_data, ccc, by = \"n\")\n\n  ## compute center , lcl and ucl\n  stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                      lcl = lcl,\n                                      ucl = ucl)\n\n  ##Filter\n  stat_data <- stat_data %>% select_( g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n\n  attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n  #return\n  return(stat_data)\n}\n\n",
    "created" : 1452174560697.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "354451413",
    "id" : "CCA16637",
    "lastKnownWriteTime" : 1443474120,
    "path" : "~/gdrive/quantide/int/qanalyst/R/se.R",
    "project_path" : "R/se.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}