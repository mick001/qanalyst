{
    "contents" : "################################################################################\n#' xbar_r_\n#' SE version of xbar-R\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class xbar-r\n#' @export\n#'\nxbar_r_ <- function(data, x , g){\n    lcl <- \"center - 3 * avg_shape / (d2 * sqrt(n))\"\n    ucl <- \"center + 3 * avg_shape / (d2 * sqrt(n))\"\n    stat_fun <- mean\n    shape_fun <- diff_range\n    class <- \"xbar-r\"\n    n_min <- 2\n    n_max <- 10\n\n    #check that n > nmin & n <= n_max\n    test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n    if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n    if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add stat, shape and n()\n    stat_dots   <- setNames(\n        list(interp(~n()),\n             interp( ~stat_fun(x), x = as.name(x)),\n             interp( ~shape_fun(x), x = as.name(x)),\n             interp( ~constant(n, d2)) ),\n        c(\"n\", \"stat\" , \"shape\", \"d2\")\n    )\n\n    stat_data <- data %>%\n        group_by_(g) %>%\n        summarise_(.dots = stat_dots)\n\n    ## compute center , lcl and ucl\n    stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                        avg_shape = ~mean(shape),\n                                        lcl = lcl,\n                                        ucl = ucl)\n\n    ##column Filter\n    stat_data <- stat_data %>% select_( group = g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n\n    #Class attributes\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    #return\n    return(stat_data)\n}\n################################################################################\n#' SE version of xbar-S\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class xbar-s\n#' @export\n#'\nxbar_s_ <- function(data, x , g){\n\n    lcl <- \"center - 3 * avg_shape / (c4 * sqrt(n))\"\n    ucl <- \"center + 3 * avg_shape / (c4 * sqrt(n))\"\n    stat_fun <- mean\n    shape_fun <- sd\n    class <- \"xbar-s\"\n    n_max <- 25\n    n_min <- 8\n\n    #check that n > nmin & n <= n_max\n    test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n    if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n    if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add stat, shape and n()\n    stat_dots   <- setNames(\n        list(interp(~n()),\n             interp( ~stat_fun(x), x = as.name(x)),\n             interp( ~shape_fun(x), x = as.name(x)),\n             interp( ~constant(n, c4))),\n        c(\"n\", \"stat\" , \"shape\", \"c4\")\n    )\n\n    stat_data <- data %>%\n        group_by_(g) %>%\n        summarise_(.dots = stat_dots)\n\n    ## compute center , lcl and ucl\n    stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                        avg_shape = ~mean(shape),\n                                        lcl = lcl,\n                                        ucl = ucl)\n\n    ##xbar Filter\n    stat_data <- stat_data %>% select_( group = g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n\n    ## Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' SE version of r\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class r\n#' @export\n#'\nr_ <- function(data, x , g){\n\n    lcl <- \"D3 * center\"\n    ucl <- \"D4 * center\"\n    stat_fun <- diff_range\n    class <- \"r\"\n    n_min <- 2\n    n_max <- 10\n\n    #check that n > nmin & n <= n_max\n    test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n    if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n    if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add stat, shape and n()\n    stat_dots   <- setNames(\n        list(interp( ~n()),\n             interp( ~stat_fun(x), x = as.name(x)),\n             interp( ~constant(n, D3)),\n             interp( ~constant(n, D4))),\n        c(\"n\", \"stat\", \"D3\", \"D4\")\n    )\n\n    stat_data <- data %>%\n        group_by_(g) %>%\n        summarise_(.dots = stat_dots)\n\n    ## compute center , lcl and ucl\n    stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                        lcl = lcl,\n                                        ucl = ucl)\n\n    ##Filter\n    stat_data <- stat_data %>% select_( group = g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n    # Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' SE version of s\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class r\n#' @export\n#'\ns_ <- function(data, x , g){\n\n    lcl <- \"center - 3 * center * sqrt(1 - c4^2)/c4\"\n    ucl <- \"center + 3 * center * sqrt(1 - c4^2)/c4\"\n    stat_fun <- sd\n    class <- \"s\"\n    n_min <- 8\n    n_max <- 25\n\n    #check that n > nmin & n <= n_max\n    test_n <- data %>% group_by_(g) %>% summarise_(n = ~n())\n    if(any(test_n$n < n_min)) stop(paste(\"Error, group size cannot be smaller that\", n_min))\n    if(any(test_n$n > n_max)) stop(paste(\"Error, group size cannot be larger that\", n_max))\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add stat, shape and n()\n    stat_dots   <- setNames(\n        list(interp( ~n()),\n             interp( ~stat_fun(x), x = as.name(x)),\n             interp( ~constant(n, c4))),\n        c(\"n\", \"stat\", \"c4\")\n    )\n\n    stat_data <- data %>%\n        group_by_(g) %>%\n        summarise_(.dots = stat_dots)\n\n    ## compute center , lcl and ucl\n    stat_data <- stat_data %>% mutate_( center = ~mean(stat),\n                                        lcl = lcl,\n                                        ucl = ucl)\n\n    ##Filter\n    stat_data <- stat_data %>% select_( group = g, \"n\",  \"stat\", \"center\", \"lcl\", \"ucl\")\n\n\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' C chart\n#'\n#' Generate a C control chart object\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @importFrom lazyeval interp\n#' @importFrom dplyr rename_ mutate_ summarise_ %>% mutate\n#' @return An object of class c_chart\n#' @export\n#'\nc_chart_ <- function(data, x){\n\n    lcl <- \"center - 3 * sqrt(center)\"\n    ucl <- \"center + 3 * sqrt(center)\"\n    center_fun <- mean\n    class <- \"c_chart\"\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add \"group\", \"n\", \"stat\", \"center\"\n    center_dots <- setNames(\n        list(\n            group = interp( ~row_number()),\n            1,\n            interp( ~identity(x), x = as.name(x)),\n            interp( ~center_fun(x), x = as.name(x))),\n        c(\"group\", \"n\", \"stat\", \"center\")\n    )\n\n    stat_data <- data %>% mutate_(.dots = center_dots)\n\n    # Add lcl and ucl\n    stat_data <- stat_data %>% mutate_(lcl = lcl, ucl = ucl)\n\n    # Filter\n    stat_data <- stat_data %>% select_(\"group\",\"n\",\"stat\",\"center\",\"lcl\",\"ucl\")\n\n    # Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    # set attributes\n    attr(stat_data, \"x_lab\") <- x\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' P chart\n#'\n#' Generate a P control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g size of each sample\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select mutate_ summarise_ %>% mutate\n#' @return An object of class p_chart\n#' @export\n#'\np_chart_ <- function(data, x, g){\n\n    ucl <- \"center + 3 * sqrt(center*(1 - center) / n)\"\n    lcl <- \"center - 3 * sqrt(center*(1 - center) / n)\"\n    center_fun <- function(x, g){sum(x) / sum(g)}\n    stat_fun <- function(x, g){x / g}\n    class <- \"p_chart\"\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add \"group\", \"n\", \"stat\", \"center\"\n    center_dots <- setNames(\n        list(\n            group = interp( ~row_number() ),\n            n = g,\n            interp( ~stat_fun(x, y), x = as.name(x), y = as.name(g) ),\n            interp( ~center_fun(x, y), x = as.name(x), y = as.name(g)) ),\n        c(\"group\", \"n\", \"stat\", \"center\")\n    )\n\n    stat_data <- data %>% mutate_(.dots = center_dots)\n\n    # Add lcl and ucl\n    stat_data <- stat_data %>% mutate_(lcl = lcl, ucl = ucl)\n\n    # Set to 0 negative lcl values (in case some are < 0)############################### Va bene???\n    stat_data <- stat_data %>% mutate(lcl = replace(lcl, which(lcl < 0), 0))\n\n    # Filter\n    stat_data <- stat_data %>% select_(\"group\",\"n\",\"stat\",\"center\",\"lcl\",\"ucl\")\n\n    # Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    # set attributes\n    attr(stat_data, \"x_lab\") <- x\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' MR chart\n#'\n#' Generate an MR control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param mr_step step of the moving range\n#' @importFrom dplyr select_ mutate %>%\n#' @importFrom lazyeval interp\n#' @importFrom chartconstants constant\n#' @return An object of class mr_chart\n#' @export\n#'\nmr_chart_ <- function(data,x,mr_step){\n\n    ucl <- \"D4 * center\"\n    lcl <- \"D3 * center\"\n    center_fun <- function(x){mean(x,na.rm = TRUE)}\n    stat_fun <- function(x,step){c(rep(NA,step-1),abs(diff(x,step-1)))}\n    class <- \"mr_chart\"\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add \"group\", \"n\", \"stat\", \"center\"\n    center_dots <- setNames(\n        list(\n            group = interp( ~row_number() ),\n            1,\n            interp( ~stat_fun(x, step), x = as.name(x), step = mr_step ),\n            interp( ~center_fun(stat)),\n            interp( ~constant(mr_step, D4)),\n            interp( ~constant(mr_step, D3))),\n        c(\"group\", \"n\", \"stat\", \"center\",\"D4\",\"D3\")\n    )\n\n    stat_data <- data %>% mutate_(.dots = center_dots)\n\n    # Add lcl and ucl\n    stat_data <- stat_data %>% mutate_(lcl = lcl, ucl = ucl)\n\n    # Filter\n    stat_data <- stat_data %>% select_(\"group\",\"n\",\"stat\",\"center\",\"lcl\",\"ucl\")\n\n    # Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' I chart\n#'\n#' Generate a I control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param mr_step moving range step\n#' @importFrom dplyr select_ mutate %>%\n#' @importFrom lazyeval interp\n#' @importFrom chartconstants constant\n#' @return An object of class i_chart\n#' @export\n#'\ni_chart_ <- function(data, x, mr_step){\n\n    lcl <- \"center - 3 * mr / d2\"\n    ucl <- \"center + 3 * mr / d2\"\n    mr_fun <- function(x, step){mean(abs(diff(x, step - 1)))}\n    stat_fun <- identity\n    center_fun <- mean\n    class <- \"i_chart\"\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add \"group\", \"n\", \"stat\", \"center\"\n    center_dots <- setNames(\n        list(\n            group = interp( ~row_number() ),\n            1,\n            interp( ~stat_fun(x), x = as.name(x)),\n            interp( ~center_fun(x), x = as.name(x)),\n            interp( ~mr_fun(x, step), x = as.name(x), step = mr_step),\n            interp( ~constant(mr_step, d2)) ),\n        c(\"group\", \"n\", \"stat\", \"center\",\"mr\",\"d2\")\n    )\n\n    stat_data <- data %>% mutate_(.dots = center_dots)\n\n    # Add lcl and ucl\n    stat_data <- stat_data %>% mutate_(lcl = lcl, ucl = ucl)\n\n    # Filter\n    stat_data <- stat_data %>% select_(\"group\",\"n\",\"stat\",\"center\",\"lcl\",\"ucl\")\n\n    # Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    # set attributes\n    attr(stat_data, \"x_lab\") <- x\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' NP chart\n#'\n#' Generate a NP control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g size of each sample\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select mutate_ summarise_ %>% mutate\n#' @return An object of class np_chart\n#' @export\n#'\nnp_chart_ <- function(data, x, g){\n\n    # Note: center = np\n    ucl <- \"center + 3 * sqrt(center*(1 - center / n))\"\n    lcl <- \"center - 3 * sqrt(center*(1 - center / n))\"\n    center_fun <- function(x, g){g * sum(x) / sum(g)}\n    stat_fun <- identity\n    class <- \"np_chart\"\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add \"group\", \"n\", \"stat\", \"center\"\n    center_dots <- setNames(\n        list(\n            group = interp( ~row_number() ),\n            n = g,\n            interp( ~stat_fun(x), x = as.name(x) ),\n            interp( ~center_fun(x, y), x = as.name(x), y = as.name(g)) ),\n        c(\"group\", \"n\", \"stat\", \"center\")\n    )\n\n    stat_data <- data %>% mutate_(.dots = center_dots)\n\n    # Add lcl and ucl\n    stat_data <- stat_data %>% mutate_(lcl = lcl, ucl = ucl)\n\n    # Set to 0 negative lcl values (in case some are < 0)############################### Va bene???\n    stat_data <- stat_data %>% mutate(lcl = replace(lcl, which(lcl < 0), 0))\n\n    # Filter\n    stat_data <- stat_data %>% select_(\"group\",\"n\",\"stat\",\"center\",\"lcl\",\"ucl\")\n\n    # Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    # set attributes\n    attr(stat_data, \"x_lab\") <- x\n\n    #return\n    return(stat_data)\n}\n\n################################################################################\n#' U chart\n#'\n#' Generate a U control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g number of inspection units per sample (sample size within each inspection unit is assumed constant)\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select mutate_ summarise_ %>% mutate\n#' @return An object of class u_chart\n#' @export\n#'\nu_chart_ <- function(data, x, g){\n\n    ucl <- \"center + 3 * sqrt(center / n)\"\n    lcl <- \"center - 3 * sqrt(center / n)\"\n    center_fun <- function(x, g){sum(x) / sum(g)}\n    stat_fun <- function(x, g){x / g}\n    class <- \"u_chart\"\n\n    ###################################\n    #### No extra changes from here ###\n    ###################################\n\n    ## add \"group\", \"n\", \"stat\", \"center\"\n    center_dots <- setNames(\n        list(\n            group = interp( ~row_number() ),\n            n = g,\n            interp( ~stat_fun(x, y), x = as.name(x), y = as.name(g) ),\n            interp( ~center_fun(x, y), x = as.name(x), y = as.name(g)) ),\n        c(\"group\", \"n\", \"stat\", \"center\")\n    )\n\n    stat_data <- data %>% mutate_(.dots = center_dots)\n\n    # Add lcl and ucl\n    stat_data <- stat_data %>% mutate_(lcl = lcl, ucl = ucl)\n\n    # Filter\n    stat_data <- stat_data %>% select_(\"group\",\"n\",\"stat\",\"center\",\"lcl\",\"ucl\")\n\n    # Set class\n    attr(stat_data, \"class\") <- c(class , \"spc\" , \"tbl_df\", \"tbl\", \"data.frame\")\n\n    # set attributes\n    attr(stat_data, \"x_lab\") <- x\n\n    #return\n    return(stat_data)\n}\n",
    "created" : 1456841192073.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "736746555",
    "id" : "B51F5972",
    "lastKnownWriteTime" : 1456850412,
    "path" : "C:/Users/Michy/Desktop/Andrea/pacchetti R/control_chart_package/qanalyst/R/se.R",
    "project_path" : "R/se.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}