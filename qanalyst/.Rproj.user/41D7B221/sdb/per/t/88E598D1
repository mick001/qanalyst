{
    "contents" : "#######################################################\n#' Generate a xbar R object\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class xbar-R\n#' @examples\n#' data(ingots)\n#' xbar_r (ingots, kg, group)\n#' @export\n#'\nxbar_r  <- function (data, x, g){\n    x <- substitute(x)\n    g <-substitute(g)\n    out <- xbar_r_ (data, x , g)\n    return(out)\n}\n\n\n#########################################################\n#' Generate a xbar-s object\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class xbar-R\n#' @examples\n#' data(ingots)\n#' xbar_s(production, x = dim_mm, g = batch)\n#' @export\n#'\nxbar_s  <- function (data, x, g){\n    x <- substitute(x)\n    g <-substitute(g)\n    out <- xbar_s_ (data, x , g)\n    return(out)\n}\n#########################################################\n#' Generate a R object\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class xbar-R\n#' @examples\n#' data(ingots)\n#' r(ingots, kg, group)\n#' @export\n#'\nr  <- function (data, x, g){\n    x <- substitute(x)\n    g <-substitute(g)\n    out <- r_ (data, x , g)\n    return(out)\n}\n\n#########################################################\n#' Generate a S object\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g group variable\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_  group_by_ mutate_ left_join summarise_  %>%\n#' @importFrom chartconstants constant\n#' @return An object of class s\n#' @examples\n#' data(ingots)\n#' s(production, x = dim_mm, g = batch)\n#' @export\n#'\ns  <- function (data, x, g){\n    x <- substitute(x)\n    g <-substitute(g)\n    out <- s_ (data, x , g)\n    return(out)\n}\n\n\n################################################################################\n#' C chart\n#'\n#' Generate a C control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_ mutate_ summarise_ %>% mutate\n#' @return An object of class c_chart\n#' @examples\n#' data(test_c)\n#' c_chart(test_c, defect)\n#' @export\n#'\nc_chart  <- function(data, x){\n    x <- substitute(x)\n    out <- c_chart_(data, x)\n    return(out)\n}\n\n\n################################################################################\n#' P chart\n#'\n#' Generate a P control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g size of each sample\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_ mutate_ summarise_ %>% mutate\n#' @return An object of class p_chart\n#' @examples\n#' data(test_p)\n#' p_chart(test_p, defect, sample_size)\n#' @export\n#'\np_chart <- function(data, x, g){\n    x <- substitute(x)\n    g <- substitute(g)\n    out <- p_chart_(data, x, g)\n    return(out)\n}\n\n################################################################################\n#' MR chart\n#'\n#' Generate an MR control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param mr_step step of the moving range\n#' @importFrom dplyr select_ mutate %>%\n#' @importFrom lazyeval interp\n#' @importFrom chartconstants constant\n#' @return An object of class mr_chart\n#' @examples\n#' # Example with moving range of 2 (minumum moving range window size)\n#' data(test_i_mr)\n#' mr_chart(test_i_mr, cost, mr_step = 2)\n#' @export\n#'\nmr_chart <- function(data,x,mr_step){\n    x <- substitute(x)\n    out <- mr_chart_(data,x,mr_step)\n    return(out)\n}\n\n\n################################################################################\n#' I chart\n#'\n#' Generate a I control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param mr_step step of the moving range\n#' @importFrom dplyr select_ mutate %>%\n#' @importFrom lazyeval interp\n#' @importFrom chartconstants constant\n#' @return An object of class i_chart\n#' @examples\n#' data(test_i_mr)\n#' i_chart(test_i_mr, cost, 2)\n#' @export\n#'\ni_chart  <- function (data, x, mr_step){\n    x <- substitute(x)\n    out <- i_chart_ (data, x , mr_step)\n    return(out)\n}\n\n################################################################################\n#' NP chart\n#'\n#' Generate a NP control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g size of each sample\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_ mutate_ summarise_ %>% mutate\n#' @return An object of class np_chart\n#' @examples\n#' data(test_np)\n#' np_chart(test_np, non_conforming_cans, sample_size)\n#' @export\n#'\nnp_chart  <- function (data, x, g){\n    x <- substitute(x)\n    g <- substitute(g)\n    out <- np_chart_ (data, x , g)\n    return(out)\n}\n\n################################################################################\n#' U chart\n#'\n#' Generate a U control chart\n#'\n#' @param data a dataframe object\n#' @param x variable to be used\n#' @param g number of inspection units per sample (sample size within each inspection unit is assumed constant)\n#' @importFrom lazyeval interp\n#' @importFrom dplyr select_ mutate_ summarise_ %>% mutate\n#' @return An object of class u_chart\n#' @examples\n#' data(test_u)\n#' #u_chart(test_u, non_conformities, number_of_inspection_units)\n#' @export\n#'\nu_chart  <- function (data, x, g){\n    x <- substitute(x)\n    g <- substitute(g)\n    out <- u_chart_ (data, x , g)\n    return(out)\n}\n\n################################################################################\n#' set_param_generic\n#'\n#' Set user defined parameters in control chart object\n#'\n#' @param data an object of class spc\n#' @param new_param a single value (constant) or a numeric vector\n#' @param replace_param parameter to be replaced (center, lcl or ucl)\n#' @importFrom lazyeval interp\n#' @importFrom dplyr %>% select_ mutate_ rename_\n#' @return An object of class spc\n#' @export\n#'\nset_param_generic <- function(data, new_param, replace_param){\n    replace_param <- substitute(replace_param)\n    out <- set_param_generic_(data, new_param, replace_param)\n    return(out)\n}\n",
    "created" : 1456841190680.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "557163051",
    "id" : "88E598D1",
    "lastKnownWriteTime" : 1456850291,
    "path" : "C:/Users/Michy/Desktop/Andrea/pacchetti R/control_chart_package/qanalyst/R/nse.R",
    "project_path" : "R/nse.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}